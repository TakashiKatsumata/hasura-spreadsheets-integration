name: Schedule Query

on:
  workflow_dispatch:
    inputs:
      test:
        description: 'Run test manually'
        required: false
  schedule:
    # Runs every day at 8:00 JST (23:00 UTC)
    - cron: '0 23 * * *'

env:
  SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
  SERVICE_ACCOUNT_PRIVATE_KEY: ${{ secrets.SERVICE_ACCOUNT_PRIVATE_KEY }}
  PRO_HASURA_GRAPHQL_ENDPOINT: https://graphql.home.athearth.com/v1/graphql
  ST_HASURA_GRAPHQL_ENDPOINT: https://graphql.staging.home.athearth.com/v1/graphql
  PRO_HASURA_ADMIN_SECRET: ${{ secrets.PRO_HASURA_ADMIN_SECRET }}
  ST_HASURA_ADMIN_SECRET: ${{ secrets.ST_HASURA_ADMIN_SECRET }}

jobs:
  run_query:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Authenticate using service account private key
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@v1
        with:
          version: '341.0.0'
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_PRIVATE_KEY }}
        id: auth

      - name: Install dependencies
        run: npm install

      - name: Run scheduled query
        run: |
          npm run query
          npm run append

      - id: 'update_worksheet'
        uses: jroehl/gsheet.action@v1.0.0 # you can specify '@release' to always have the latest changes
        with:
          spreadsheetId: <spreadsheetId>
          commands: | # list of commands, specified as a valid JSON string
            [
              { "command": "addWorksheet", "args": { "worksheetTitle": "<worksheetTitle>" }},
              { "command": "updateData", "args": { "data": [["A1", "A2", "A3"]] }},
              { "command": "getData", "args": { "range": "'<worksheetTitle>'!A2:B3" } }
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
      - name: dump results
        env:
          #  the output of the action can be found in ${{ steps.update_worksheet.outputs.results }}
          RESULTS: ${{ steps.update_worksheet.outputs.results }}
        run: echo "$RESULTS" | jq

      - name: Update spreadsheet with query result
        uses: gavingmiller/sheets-update-cell@v1.1.1
        with:
          token: ${{ secrets.GOOGLE_TOKEN }}
          spreadsheet_id: ${{ env.SPREADSHEET_ID }}
          sheet_name: '物件取り込み数'
          cell: A${{ steps.today.outputs.date }}
          data: ${{ steps.counts.outputs.query-result }}
          data_type: 'NUMBER'

      - name: Notify if query failed
        if: failure()
        run: |
          echo "Scheduled query failed. Check the logs for details."
          curl -X POST -H "Content-type: application/json" -d '{"text":"Scheduled query failed. Check the logs for details."}' ${{ secrets.SLACK_WEBHOOK }}
